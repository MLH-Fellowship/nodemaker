{
  "metaParameters": {
    "serviceName": "Hacker News",
    "authType": "OAuth2",
    "nodeColor": "#ff6600"
  },
  "mainParameters": {
    "Article": [
      {
        "name": "Get",
        "description": "Get a Hacker News article",
        "endpoint": "/items/$$articleId$$",
        "requestMethod": "GET",
        "fields": [
          {
            "name": "Article id",
            "description": "The id of the article to get",
            "type": "string",
            "default": ""
          },
          {
            "name": "",
            "description": "",
            "type": "collection",
            "default": {},
            "options": [
              {
                "name": "include comments",
                "description": "whether or not to include comments",
                "type": "boolean",
                "default": true
              }
            ]
          }
        ]
      },
      {
        "name": "Get All",
        "description": "Get all articles",
        "endpoint": "/search?",
        "requestMethod": "GET",
        "fields": [
          {
            "name": "Return all",
            "description": "return all articles",
            "type": "boolean",
            "default": true
          },
          {
            "name": "Limit",
            "description": "Limit of Hacker News articles to be returned for the query",
            "type": "number",
            "default": 21
          },
          {
            "name": "Additional Fields",
            "description": "",
            "type": "collection",
            "default": {},
            "options": [
              {
                "name": "Keyword",
                "description": "The keyword for filtering the results of the query",
                "type": "string",
                "default": ""
              },
              {
                "name": "Tags",
                "description": "Tags for filtering the results of the query",
                "type": "multiOptions",
                "default": {},
                "options": [
                  {
                    "name": "Story",
                    "description": "Returns query results filtered by story tag"
                  },
                  {
                    "name": "Comment",
                    "description": "Returns query results filtered by comment tag"
                  },
                  {
                    "name": "Poll",
                    "description": "Returns query results filtered by poll tag"
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "User": [
      {
        "name": "Get",
        "description": "Get a Hacker news user",
        "endpoint": "/users/$$username$$",
        "requestMethod": "GET",
        "fields": [
          {
            "name": "Username",
            "description": "The Hacker News user to operate on",
            "type": "string",
            "default": ""
          }
        ]
      },
      {
        "name": "Rename",
        "description": "Rename a hacker news user",
        "endpoint": "/users/$$username$$",
        "requestMethod": "PUT",
        "fields": [
          {
            "name": "Username",
            "description": "The Hacker News user to operate on",
            "type": "string",
            "default": ""
          }
        ]
      }
    ]
  },
  "nodeGenerationType": "Simple",
  "nodeType": "Regular"
}

{
  "docsParameters": {
    "serviceName": "Hacker News",
    "serviceUrl": "",
    "introDescription": "a social news website focusing on computer science and entrepreneurship",
    "exampleUsage": "get an article from Hacker News",
    "workflowUrl": "https://n8n.io/workflows/123"
  }
}

{
  "metaParameters": {
    "serviceName": "",
    "authType": "OAuth2",
    "nodeColor": "#ff6600",
    "apiUrl": "http://hn.algolia.com/api/v1"
  },
  "mainParameters": {
    "webhookEndpoint": "/automations/hooks",
    "webhookProperties": [
      {
        "displayName": "Event",
        "name": "event",
        "required": false,
        "description": "The events that can trigger the webhook and whether they are enabled.",
        "type": "options",
        "default": {},
        "options": [
          {
            "name": "Subscriber Activated",
            "value": "subscriberActivated",
            "description": "Whether the webhook is triggered when a subscriber is activated.",
            "fields": []
          },
          {
            "name": "Link Clicked",
            "value": "linkClicked",
            "description": "Whether the webhook is triggered when a link is clicked.",
            "fields": [
              {
                "displayName": "Initiating Link",
                "name": "initiatingLink",
                "description": "The URL of the initiating link",
                "type": "string",
                "default": "",
                "required": true
              }
            ]
          }
        ]
      }
    ]
  },
  "nodeGenerationType": "Simple",
  "nodeType": "Trigger"
}
